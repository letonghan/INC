

# pr:
# - main

pool:
  vmImage: ubuntu-latest

variables:
  PYTHON: 'python3.8'
  INC_VER: '1.12'
  IMAGE_NAME: 'neural-compressor'
  IMAGE_TAG: '1.12'
  INC_BRANCH: 'master'


stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: Docker@2
      displayName: 'Login to repo'
      inputs:
        command: login
        containerRegistry: inc-internal
        
    - script: docker build --build-arg PYTHON=${PYTHON} --build-arg INC_BRANCH=${INC_BRANCH} -f docker/Dockerfile.devel -t ${IMAGE_NAME}:${IMAGE_TAG} .
      displayName: 'Build Container'
    
    - script: |
        docker images | grep -i neural-compressor
      displayName: 'Check docker'
    
    - script: |
        docker run ${IMAGE_NAME}:${IMAGE_TAG} /usr/local/bin/python -c "import neural_compressor as nc;print(nc.version.__version__)"
        docker run --env PYTHONPATH="/neural-compressor" ${IMAGE_NAME}:${IMAGE_TAG} /usr/local/bin/python /neural-compressor/test/config/test_config.py
        
      displayName: 'Run python sciprt'

  - job: MobileNetV2
    displayName: 'Distillation of MobileNetV2'
    steps:
    - script: |
        docker run ${IMAGE_NAME}:${IMAGE_TAG} /usr/local/bin/python -c "import neural_compressor as nc;print(nc.version.__version__)"
        docker run ${IMAGE_NAME}:${IMAGE_TAG} ls && cd /neural-compressor/tree/master/examples/pytorch/image_recognition/MobileNetV2-0.35/distillation/eager/
        docker run --env PYTHONPATH="/neural-compressor" ${IMAGE_NAME}:${IMAGE_TAG} /usr/local/bin/python train_without_distillation.py --epochs 200 --lr 0.1 --layers 40 --widen-factor 2 --name WideResNet-40-2 --tensorboard
      displayName: 'Train teacher model'
    - script: |
        docker run --env PYTHONPATH="/neural-compressor" ${IMAGE_NAME}:${IMAGE_TAG} /usr/local/bin/python main.py --epochs 200 --lr 0.02 --name MobileNetV2-0.35-distillation --teacher_model runs/WideResNet-40-2/model_best.pth.tar --tensorboard --seed 9 
      displayName: 'Distillation'
    